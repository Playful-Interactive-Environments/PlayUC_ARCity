// This code automatically generated by TableCodeGen

using System;
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Text;

public class CSVProjects : AManager<CSVProjects>
{
    
    public class Row
    {
        public string id;
        public string title;
        public string content;
        public string influence;
        public string social;
        public string environment;
        public string finance;
        public string cost;
        public string cooldown;
        public string minigame;
        public string reprid;

    }
    public TextAsset EnglishProjects;
    public TextAsset GermanProjects;
    private string EnglishText;
    private string GermanText;
    public List<Row> rowList = new List<Row>();

    bool isLoaded = false;

    public void LoadLanguage(string language)
    {
        rowList.Clear();
        switch (language)
        {
            case "english":
                Load(EnglishText);
                break;
            case "german":
                Load(GermanText);
                break;
        }
    }

    void Start()
    {
        LoadExternalFile();
        LoadLanguage("english");
    }
    void LoadExternalFile()
    {
        try
        {
            string _englishPath = Path.Combine(Application.persistentDataPath, "EnglishProjects.csv");
            string _germanPath = Path.Combine(Application.persistentDataPath, "GermanProjects.csv");
            EnglishText = File.ReadAllText(_englishPath, Encoding.UTF8);
            GermanText = File.ReadAllText(_germanPath, Encoding.UTF8);
            Debug.Log("File found.");
            NetworkingManager.Instance.DebugText.text = "found";
        }
        catch (Exception c)
        {
            Debug.Log("No file found. Loading defaults.");
            EnglishText = EnglishProjects.text;
            GermanText = GermanProjects.text;
        }
    }
    #region CSV Commands
    public List<Row> GetRowList()
    {
        return rowList;
    }

    public bool IsLoaded()
    {
        return isLoaded;
    }

    public void Load(string text)
    {
        rowList.Clear();
        string[][] grid = CsvParser2.Parse(text);
        for (int i = 0; i < grid.Length; i++)
        {
            Row row = new Row();
            row.id = grid[i][0];
            row.title = grid[i][1];
            row.content = grid[i][2];
            row.influence = grid[i][3];
            row.social = grid[i][4];
            row.environment = grid[i][5];
            row.finance = grid[i][6];
            row.cost = grid[i][7];
            row.cooldown = grid[i][8];
            row.minigame = grid[i][9];
            row.reprid = grid[i][10];
            rowList.Add(row);
        }
        isLoaded = true;
    }

    public int NumRows()
    {
        return rowList.Count;
    }

    public Row GetAt(int i)
    {
        if (rowList.Count <= i)
            return null;
        return rowList[i];
    }

    public Row Find_ID(int find)
    {
        return rowList[find];
    }

    public Row Find_Title(string find)
    {
        return rowList.Find(x => x.title == find);
    }
    #endregion
}